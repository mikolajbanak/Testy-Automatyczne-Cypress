{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-12T10:35:38.287Z",
    "end": "2023-06-12T10:35:39.632Z",
    "duration": 1345,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d0c25494-5a97-45c9-bd3f-811973d63f91",
      "title": "",
      "fullFile": "cypress/integration/UI/asercje.js",
      "file": "cypress/integration/UI/asercje.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "43a3a1cd-2163-4f9c-ab35-3c9b857eed3a",
          "title": "E2E - Asercje",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asercje expect oraz should",
              "fullTitle": "E2E - Asercje Asercje expect oraz should",
              "timedOut": null,
              "duration": 1260,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"/\"); //Weryfikacja tekstu\ncy.get('a[title=\"Contact us\"]').should(\"contain\", \"Contact us\");\ncy.get('a[title=\"Contact us\"]').then(zakladka => {\n  expect(zakladka).to.contain(\"Contact us\");\n}); // Sprawdzenie czy nie zawiera tekstu\ncy.get('a[title=\"Contact us\"]').should(\"not.contain\", \"test\");\ncy.get('a[title=\"Contact us\"]').then(zakladka => {\n  expect(zakladka).not.to.contain(\"test\");\n}); //Weryfikacja czy znacznik posiada klase\ncy.get('#search_query_top').should(\"have.class\", \"search_query form-control ac_input\");\ncy.get('#search_query_top').then(searchbox => {\n  expect(searchbox).have.class(\"search_query form-control ac_input\");\n}); //Czy element jest widoczny\ncy.get('#search_query_top').should(\"be.visible\");\ncy.get('#search_query_top').then(searchbox => {\n  expect(searchbox).to.be.visible;\n}); //Weryfikacja ilości pobranych elementów\ncy.get(\"ul.sf-menu\").find(\"li\").should(\"have.length\", 16);\ncy.get(\"ul.sf-menu\").find(\"li\").then(zakladki => {\n  expect(zakladki).have.length(16);\n}); //Weryfikacja wartości css danego elementu\ncy.get('#search_query_top').should(\"have.css\", \"line-height\", \"18.5714px\");\ncy.get('#search_query_top').then(wyszukiwarka => {\n  expect(wyszukiwarka).have.css(\"line-height\", \"18.5714px\");\n});",
              "err": {},
              "uuid": "578551b6-7481-4548-9ffa-1d4af8c77620",
              "parentUUID": "43a3a1cd-2163-4f9c-ab35-3c9b857eed3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "578551b6-7481-4548-9ffa-1d4af8c77620"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}